{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","react_default","a","createElement","className","onSubmit","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingsChart","chartData","labels","datasets","values","_loop","bucket","filteredBookingsCount","reduce","prev","price","push","fillColor","strokeColor","highlightFill","highlightStroke","toConsumableArray","style","textAlign","react_chartjs","bookingsControl","activeOutputType","onChange","BookingsPage","isLoading","outputType","fetchBookings","Authorization","deleteBookingHandler","bookingId","filter","changeOutputTypeHandler","content","Spinner_Spinner","Fragment","BookingsControls_BookingsControls","BookingList_BookingList","BookingsChart","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","date","creatorId","onDetail","eventList","events","EventItem_EventItem","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","desc","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fetchEvents","_this2","Backdrop_Backdrop","Modal_Modal","rows","EventList_EventList","mainNavigation","auth_context","Consumer","NavLink","to","App","BrowserRouter","Provider","Navigation_MainNavigation","Switch","Redirect","from","exact","Route","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4b0f0da2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {},\r\n    logout: () => {}\r\n});","import React, { Component } from 'react';\r\n\r\nimport './Auth.css';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isLogin: true\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.emailEl = React.createRef();\r\n    this.passwordEl = React.createRef();\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isLogin: !prevState.isLogin };\r\n    });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const email = this.emailEl.current.value;\r\n    const password = this.passwordEl.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!) {\r\n          login(email: $email, password: $password) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password\r\n      }\r\n    };\r\n\r\n    if (!this.state.isLogin) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $password: String!) {\r\n            createUser(userInput: {email: $email, password: $password}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email: email,\r\n          password: password\r\n        }\r\n      };\r\n    }\r\n\r\n    fetch('/graphql', { //http://localhost:8000\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        if (resData.data.login.token) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\" />\r\n  </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React from 'react';\r\n\r\nimport './BookingList.css';\r\n\r\nconst bookingList = props => (\r\n  <ul className=\"bookings__list\">\r\n    {props.bookings.map(booking => {\r\n      return (\r\n        <li key={booking._id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            {booking.event.title} -{' '}\r\n            {new Date(booking.createdAt).toLocaleDateString()}\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\r\n          </div>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default bookingList;\r\n","import React from 'react';\r\nimport { Bar as BarChart } from 'react-chartjs';\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n  Cheap: {\r\n    min: 0,\r\n    max: 100\r\n  },\r\n  Normal: {\r\n    min: 100,\r\n    max: 200\r\n  },\r\n  Expensive: {\r\n    min: 200,\r\n    max: 10000000\r\n  }\r\n};\r\n\r\nconst bookingsChart = props => {\r\n  const chartData = { labels: [], datasets: [] };\r\n  let values = [];\r\n  for (const bucket in BOOKINGS_BUCKETS) {\r\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n      if (\r\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\r\n      ) {\r\n        return prev + 1;\r\n      } else {\r\n        return prev;\r\n      }\r\n    }, 0);\r\n    values.push(filteredBookingsCount);\r\n    chartData.labels.push(bucket);\r\n    chartData.datasets.push({\r\n      // label: \"My First dataset\",\r\n      fillColor: 'rgba(220,220,220,0.5)',\r\n      strokeColor: 'rgba(220,220,220,0.8)',\r\n      highlightFill: 'rgba(220,220,220,0.75)',\r\n      highlightStroke: 'rgba(220,220,220,1)',\r\n      data: values\r\n    });\r\n    values = [...values];\r\n    values[values.length - 1] = 0;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <BarChart data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default bookingsChart;\r\n","import React from 'react';\r\n\r\nimport './BookingsControls.css';\r\n\r\nconst bookingsControl = props => {\r\n  return (\r\n    <div className=\"bookings-control\">\r\n      <button\r\n        className={props.activeOutputType === 'list' ? 'active' : ''}\r\n        onClick={props.onChange.bind(this, 'list')}\r\n      >\r\n        List\r\n      </button>\r\n      <button\r\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\r\n        onClick={props.onChange.bind(this, 'chart')}\r\n      >\r\n        Chart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default bookingsControl;\r\n","import React, { Component } from 'react';\r\n\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport AuthContext from '../context/auth-context';\r\nimport BookingList from '../components/Bookings/BookingList/BookingList';\r\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\r\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: [],\r\n    outputType: 'list'\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  componentDidMount() {\r\n    this.fetchBookings();\r\n  }\r\n\r\n  fetchBookings = () => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n             createdAt\r\n             event {\r\n               _id\r\n               title\r\n               date\r\n               price\r\n             }\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.context.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const bookings = resData.data.bookings;\r\n        this.setState({ bookings: bookings, isLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  deleteBookingHandler = bookingId => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          mutation CancelBooking($id: ID!) {\r\n            cancelBooking(bookingId: $id) {\r\n            _id\r\n             title\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: bookingId\r\n      }\r\n    };\r\n\r\n    fetch('/graphql', { //http://localhost:8000\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.context.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState(prevState => {\r\n          const updatedBookings = prevState.bookings.filter(booking => {\r\n            return booking._id !== bookingId;\r\n          });\r\n          return { bookings: updatedBookings, isLoading: false };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  changeOutputTypeHandler = outputType => {\r\n    if (outputType === 'list') {\r\n      this.setState({ outputType: 'list' });\r\n    } else {\r\n      this.setState({ outputType: 'chart' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let content = <Spinner />;\r\n    if (!this.state.isLoading) {\r\n      content = (\r\n        <React.Fragment>\r\n          <BookingsControls\r\n            activeOutputType={this.state.outputType}\r\n            onChange={this.changeOutputTypeHandler}\r\n          />\r\n          <div>\r\n            {this.state.outputType === 'list' ? (\r\n              <BookingList\r\n                bookings={this.state.bookings}\r\n                onDelete={this.deleteBookingHandler}\r\n              />\r\n            ) : (\r\n              <BookingsChart bookings={this.state.bookings} />\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return <React.Fragment>{content}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default BookingsPage;\r\n","import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = props => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className=\"btn\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default modal;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => <div className=\"backdrop\"></div>;\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport './EventItem.css';\r\n\r\nconst eventItem = props => (\r\n  <li key={props.eventId} className=\"events__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>\r\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\r\n      </h2>\r\n    </div>\r\n    <div>\r\n      {props.userId === props.creatorId ? (\r\n        <p>Your the owner of this event.</p>\r\n      ) : (\r\n        <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;\r\n","import React from 'react';\r\n\r\nimport EventItem from './EventItem/EventItem';\r\nimport './EventList.css';\r\n\r\nconst eventList = props => {\r\n  const events = props.events.map(event => {\r\n    return (\r\n      <EventItem\r\n        key={event._id}\r\n        eventId={event._id}\r\n        title={event.title}\r\n        price={event.price}\r\n        date={event.date}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onDetail={props.onViewDetail}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"event__list\">{events}</ul>;\r\n};\r\n\r\nexport default eventList;\r\n","import React, { Component } from 'react';\r\n\r\nimport Modal from '../components/Modal/Modal';\r\nimport Backdrop from '../components/Backdrop/Backdrop';\r\nimport EventList from '../components/Events/EventList/EventList';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport AuthContext from '../context/auth-context';\r\nimport './Events.css';\r\n\r\nclass EventsPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null\r\n  };\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.priceElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const title = this.titleElRef.current.value;\r\n    const price = +this.priceElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n    const description = this.descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const event = { title, price, date, description };\r\n    console.log(event);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\r\n            createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          title: title,\r\n          desc: description,\r\n          price: price,\r\n          date: date\r\n        }\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState(prevState => {\r\n          const updatedEvents = [...prevState.events];\r\n          updatedEvents.push({\r\n            _id: resData.data.createEvent._id,\r\n            title: resData.data.createEvent.title,\r\n            description: resData.data.createEvent.description,\r\n            date: resData.data.createEvent.date,\r\n            price: resData.data.createEvent.price,\r\n            creator: {\r\n              _id: this.context.userId\r\n            }\r\n          });\r\n          return { events: updatedEvents };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedEvent: null });\r\n  };\r\n\r\n  fetchEvents() {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    fetch('/graphql', { //'http://localhost:8000\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const events = resData.data.events;\r\n        if (this.isActive) {\r\n          this.setState({ events: events, isLoading: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  showDetailHandler = eventId => {\r\n    this.setState(prevState => {\r\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\r\n      return { selectedEvent: selectedEvent };\r\n    });\r\n  };\r\n\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedEvent: null });\r\n      return;\r\n    }\r\n    console.log(this.state.selectedEvent)\r\n    const requestBody = {\r\n      query: `\r\n          mutation BookEvent($id: ID!) {\r\n            bookEvent(eventId: $id) {\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          id: this.state.selectedEvent._id\r\n        }\r\n    };\r\n\r\n    fetch('/graphql', { //http://localhost:8000\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.context.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log(resData);\r\n        this.setState({ selectedEvent: null });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title={this.state.selectedEvent.title}\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventHandler}\r\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\r\n          >\r\n            <h1>{this.state.selectedEvent.title}</h1>\r\n            <h2>\r\n              ${this.state.selectedEvent.price} -{' '}\r\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\r\n            </h2>\r\n            <p>{this.state.selectedEvent.description}</p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <p>Share your own Events!</p>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create Event\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AuthContext from '../../context/auth-context';\r\nimport './MainNavigation.css';\r\n\r\nconst mainNavigation = props => (\r\n  <AuthContext.Consumer>\r\n    {context => {\r\n      return (\r\n        <header className=\"main-navigation\">\r\n          <div className=\"main-navigation__logo\">\r\n            <h1>EasyEvent</h1>\r\n          </div>\r\n          <nav className=\"main-navigation__items\">\r\n            <ul>\r\n              {!context.token && (\r\n                <li>\r\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\r\n                </li>\r\n              )}\r\n              <li>\r\n                <NavLink to=\"/events\">Events</NavLink>\r\n              </li>\r\n              {context.token && (\r\n                <React.Fragment>\r\n                  <li>\r\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <button onClick={context.logout}>Logout</button>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n      );\r\n    }}\r\n  </AuthContext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport AuthPage from './pages/Auth';\r\nimport BookingsPage from './pages/Bookings';\r\nimport EventsPage from './pages/Events';\r\nimport MainNavigation from './components/Navigation/MainNavigation';\r\nimport AuthContext from './context/auth-context';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    token: null,\r\n    userId: null\r\n  };\r\n\r\n  login = (token, userId, tokenExpiration) => {\r\n    this.setState({ token: token, userId: userId });\r\n  };\r\n\r\n  logout = () => {\r\n    this.setState({ token: null, userId: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <AuthContext.Provider\r\n            value={{\r\n              token: this.state.token,\r\n              userId: this.state.userId,\r\n              login: this.login,\r\n              logout: this.logout\r\n            }}\r\n          >\r\n            <MainNavigation />\r\n            <main className=\"main-content\">\r\n              <Switch>\r\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\r\n                {this.state.token && (\r\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\r\n                )}\r\n                {!this.state.token && (\r\n                  <Route path=\"/auth\" component={AuthPage} />\r\n                )}\r\n                <Route path=\"/events\" component={EventsPage} />\r\n                {this.state.token && (\r\n                  <Route path=\"/bookings\" component={BookingsPage} />\r\n                )}\r\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\r\n              </Switch>\r\n            </main>\r\n          </AuthContext.Provider>\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}